/*
 * Copyright (c) 2014-2016, ARM Limited and Contributors. All rights reserved.
 * Copyright (c) 2016, Huawei Technologies/Hisilicon. All rights reserved.
 * Copyright (c) 2016, Linaro Limited. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * Neither the name of ARM nor the names of its contributors may be used
 * to endorse or promote products derived from this software without specific
 * prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <asm_macros.S>
#include <cortex_a57.h>
#include "d02_def.h"

	.globl platform_mem_init
	.globl plat_reset_handler
	.globl reset_handler
	.globl plat_crash_console_init
	.globl plat_crash_console_putc

func platform_mem_init
	/*
	 * Hack: save ELR_EL3 to SRAM so that we can return to UEFI when
	 * it's time to enter BL33.
	 * REVISIT: move this to macro el3_entrypoint_common instead?
	 */
	mrs	x0, elr_el3
	ldr	x1, =ELR_PEI_SAVE_ADDR
	str	x0, [x1]
	/*
	 * TPIDR_EL0 also needs to be preserved (it holds the address of
	 * of the PEI service table)
	 */
	mrs	x0, tpidr_el0
	ldr	x1, =TPIDR_EL0_SAVE_ADDR
	str	x0, [x1]
	ret
endfunc platform_mem_init

func plat_reset_handler
	/* --------------------------------------------------------------------
	 * Enable the event stream every 65536 cycles
	 * --------------------------------------------------------------------
	 */
	mov	x0, #(0xf << EVNTI_SHIFT)
	orr	x0, x0, #EVNTEN_BIT
	msr	CNTKCTL_EL1, x0

	/* --------------------------------------------------------------------
	 * Cortex-A57 specific settings
	 * --------------------------------------------------------------------
	 */
	mov     x0, #((L2_DATA_RAM_LATENCY_3_CYCLES << L2CTLR_DATA_RAM_LATENCY_SHIFT) | \
		      (L2_TAG_RAM_LATENCY_3_CYCLES << L2CTLR_TAG_RAM_LATENCY_SHIFT))
	msr     L2CTLR_EL1, x0
1:
	isb
	ret

endfunc plat_reset_handler

func reset_handler
	ret
endfunc reset_handler

func plat_crash_console_init
	mov_imm	x0, D02_UART0_BASE
	mov_imm	x1, D02_UART0_CLK_IN_HZ
	mov_imm	x2, D02_UART0_BAUDRATE
	b	console_core_init
endfunc plat_crash_console_init

func plat_crash_console_putc
	mov_imm	x1, D02_UART0_BASE
	b	console_core_putc
endfunc plat_crash_console_putc
